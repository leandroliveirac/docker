
version: '3.7'

services:

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.15.2
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    networks:
    - elasticnet
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    container_name: elasticsearch
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      bootstrap.memory_lock: true
      node.name: es01
      cluster.routing.allocation.disk.threshold_enabled: false
      discovery.type: single-node
      ES_JAVA_OPTS: -Xmx512m -Xms512m
      # ES_JAVA_OPTS: -XX:UseAVX=2 -Xms1g -Xmx1g      
      cluster.name: elasticsearch
    volumes:      
      - esdata:/usr/share/elasticsearch/data
      # - ./elastic/data:/var/lib/elasticsearch/data
    ulimits:
      memlock:
        hard: -1
        soft: -1
    networks:
      - elasticnet
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.1
    container_name: kibana
    ports:
      - '5601:5601'
      - '9600:9600'
    environment:
      SERVERNAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_URL: http://elasticsearch:9200
      # ES_JAVA_OPTS: -Xmx512m -Xms512m
    networks:
      - elasticnet
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
volumes:
  esdata:
    driver: local

networks:
  elasticnet:
    driver: bridge
  